apply from: rootProject.file('cc-settings.gradle')
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    buildToolsVersion rootProject.ext.android["buildToolsVersion"]
    defaultConfig {
        applicationId "com.m4coding.coolhub"
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["appVersionCode"]
        versionName rootProject.ext.android["appVersionName"]

        multiDexEnabled true  //开启MultiDex
        vectorDrawables.useSupportLibrary = true

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            //打release包时关闭模拟器支持
            IS_SIMULATOR = false

            //混淆
            minifyEnabled false
            //Zipalign优化
            zipAlignEnabled true
            //移除无用的resource文件
            shrinkResources false
            //proguard-android.txt是的系统默认的android程序的混淆文件，该文件已经包含了基本的混淆声明，后一个proguard-rules.pro文件是自己的定义混淆文件
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    apkNameModify(defaultConfig)
}

//修改apk名称
def apkNameModify(def defaultConfig) {
    android.applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def fileName = ""
            if (variant.buildType.name == 'release') {
                fileName = "CoolHub-${defaultConfig.versionName}.apk"
            } else if (variant.buildType.name == 'debug') {
                fileName = "CoolHub-debug-${defaultConfig.versionName}.apk"
            }
            outputFileName = fileName
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    implementation project(':base')
    implementation project(':business_base')
    addComponent "business_mainpage"
    addComponent "business_login"
    addComponent "business_search"
    addComponent "business_start"
    addComponent "api"

    implementation rootProject.ext.dependencies["bugly-upgrade"]
    implementation rootProject.ext.dependencies["bugly-nativecrashreport"]
}

apply from: rootProject.file('simulator-config.gradle')